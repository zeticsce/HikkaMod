#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2022
#           https://t.me/hikariatama
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

import logging
import os

try:
    import redis
except ImportError as e:
    if "DYNO" in os.environ:
        raise e

from telethon.tl.types import Message

from .. import loader, main, utils

logger = logging.getLogger(__name__)


@loader.tds
class HerokuMod(loader.Module):
    """Stuff related to Hikka Heroku installation"""

    strings = {
        "name": "Heroku",
        "redisdocs": (
            "<emoji document_id='5458675903028535170'>üõç</emoji> <b>Redis"
            " Database</b>\n\nüá∑üá∫ <b>If you are from Russia, or just want to use"
            " external service:</b>\n1. Go to https://redis.com\n2. Register"
            " account\n3. Create database instance\n4. Enter your Redis Database URL"
            " via <code>.setredis &lt;redis_url&gt;</code>\n<i><emoji"
            " document_id='6318918617891080008'>üí°</emoji> Hint: URL structure is"
            " <code>redis://:PASSWORD@ENDPOINT</code></i>\n\n‚ôìÔ∏è <b>If you are not from"
            " Russia, just enable </b><code>heroku-redis</code><b> plugin for your app."
            " For this action Heroku account verification is required!</b>"
        ),
        "url_invalid": (
            "<emoji document_id='5379568936218009290'>üëé</emoji> <b>Invalid URL"
            " specified</b>"
        ),
        "url_saved": (
            "<emoji document_id='5368324170671202286'>üëç</emoji> <b>URL saved</b>"
        ),
    }

    strings_ru = {
        "redisdocs": (
            "<emoji document_id='5458675903028535170'>üõç</emoji> <b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
            " Redis</b>\n\nüá∑üá∫ <b>–ï—Å–ª–∏ —Ç—ã –∏–∑ –†–æ—Å—Å–∏–∏, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"
            " –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å:</b>\n1. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ https://redis.com\n2."
            " –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è\n3. –°–æ–∑–¥–∞–π –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n4. –í–≤–µ–¥–∏ Database URL –≤"
            " <code>.setredis &lt;redis_url&gt;</code>\n<i><emoji"
            " document_id='6318918617891080008'>üí°</emoji> –ü–æ–¥—Å–∫–∞–∑–∫–∞: URL –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:"
            " <code>redis://:PASSWORD@ENDPOINT</code></i>\n\n‚ôìÔ∏è <b>–ï—Å–ª–∏ —Ç—ã –Ω–µ –∏–∑"
            " –†–æ—Å—Å–∏–∏, –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω"
            " </b><code>heroku-redis</code><b> –≤ Hikka app Heroku. –î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ"
            " –±—É–¥–µ—Ç –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</b>"
        ),
        "url_invalid": (
            "<emoji document_id='5379568936218009290'>üëé</emoji> <b>–£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π"
            " URL</b>"
        ),
        "url_saved": (
            "<emoji document_id='5368324170671202286'>üëç</emoji> <b>URL —Å–æ—Ö—Ä–∞–Ω–µ–Ω</b>"
        ),
    }

    @loader.command(ru_doc="<—Å—Å—ã–ª–∫–∞ Redis> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Redis")
    async def setredis(self, message: Message):
        """<redis_url> - Set Redis Database URL"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings("redisdocs"))
            return

        try:
            redis.from_url(args)
        except Exception:
            await utils.answer(message, self.strings("url_invalid"))
            return

        main.save_config_key("redis_uri", args)
        await self._db.redis_init()
        await self._db.remote_force_save()
        await utils.answer(message, self.strings("url_saved"))
